<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
					http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--
        * root-context.xml
          서버 구동과 동시에 web.xml파일을 거쳐서 바로 로딩되는 문서 == preloading
         => 서버구동과 동시에 바로 셋팅(bean으로 등록)해야하는 내용들을 작성하면 됨
    -->

    <!-- load to db.properties . -->
    <context:property-placeholder location="classpath:config/mybatis/db.properties"/>


    <!-- DB연결 설정 3단계 -->
    <!-- 1단계.DB연결을 위한 dataSource 설정 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="defaultAutoCommit" value="false"/>
    </bean>


    <!-- 2단계. MyBatis Spring에서 제공하는 SQL명령 실행을 위한 SqlSessionFactory 등록  -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 어떤 DB에 연결할건지 연결을 위한 도구를 참조설정 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- MyBatis 설정 파일의 위치를 설정(src/main/resources == classpath:)하여 설정값들을 가져오겠다. -->
        <property name="configLocation" value="classpath:config/mybatis/mybatis-config.xml"/>
    </bean>

    <!-- 3단계. SQL구문 실행을 위한 템플릿을 제공하는 도구 등록 -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <!-- SQL명령어 실행을 위한 도구에 대한 참조 설정 -->
        <constructor-arg ref="sqlSessionFactory"/>
    </bean>

</beans>
